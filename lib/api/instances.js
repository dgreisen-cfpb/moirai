// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var clusters, conf, iced, instances, _, __iced_k, __iced_k_noop;

  iced = require('iced-runtime');
  __iced_k = __iced_k_noop = function() {};

  _ = require('underscore');

  conf = require('../config');

  clusters = require('./clusters');

  instances = {};

  instances.create_instance = function(client, opts, callback) {
    var cluster_opts, instance_opts, required_tags, user_instance_opts, user_tags;
    instance_opts = {
      size: 't2.micro',
      tags: {}
    };
    user_instance_opts = _.pick(opts, 'name', 'size', 'user_data');
    _.extend(instance_opts, user_instance_opts);
    user_tags = opts.tags || {};
    required_tags = {};
    _.extend(instance_opts.tags, user_tags, required_tags);
    cluster_opts = _.pick(opts, 'name', 'halt_ttl', 'destroy_ttl');
    return clusters.create_cluster();
  };

  instances.handle_create_instance = function(req, resp) {
    var all_opts, cluster_doc, err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    all_opts = req.body;
    (function(_this) {
      return (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "/opt/moirai/src/api/instances.iced",
          funcname: "handle_create_instance"
        });
        instances.create_instance(req.couch, all_opts, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              return cluster_doc = arguments[1];
            };
          })(),
          lineno: 23
        }));
        __iced_deferrals._fulfill();
      });
    })(this)((function(_this) {
      return function() {
        if (err) {
          return resp.status(500).send(JSON.stringify({
            error: 'internal error',
            msg: 'internal error'
          }));
        }
        return resp.status(201).send(JSON.stringify(cluster_doc));
      };
    })(this));
  };

  instances.handle_get_instances = function(req, resp) {
    return resp.send('NOT IMPLEMENTED');
  };

  instances.handle_get_instance = function(req, resp) {
    return resp.send('NOT IMPLEMENTED');
  };

  instances.handle_update_instance = function(req, resp) {
    return resp.send('NOT IMPLEMENTED');
  };

  instances.handle_destroy_instance = function(req, resp) {
    return resp.send('NOT IMPLEMENTED');
  };

  module.exports = instances;

}).call(this);
